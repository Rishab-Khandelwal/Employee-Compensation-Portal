{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/employee-add/employee-add.component.css","webpack:///./src/app/Components/employee-add/employee-add.component.html","webpack:///./src/app/Components/employee-add/employee-add.component.ts","webpack:///./src/app/Components/employee-edit/employee-edit.component.css","webpack:///./src/app/Components/employee-edit/employee-edit.component.html","webpack:///./src/app/Components/employee-edit/employee-edit.component.ts","webpack:///./src/app/Components/home/home.component.css","webpack:///./src/app/Components/home/home.component.html","webpack:///./src/app/Components/home/home.component.ts","webpack:///./src/app/Components/login/login.component.css","webpack:///./src/app/Components/login/login.component.html","webpack:///./src/app/Components/login/login.component.ts","webpack:///./src/app/Components/register/register.component.css","webpack:///./src/app/Components/register/register.component.html","webpack:///./src/app/Components/register/register.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/employee.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div#inputData {\\n  margin-top: 85px;\\n  margin-bottom: 85px;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\" [routerLink]=\\\"['/main']\\\">\\n        <b>Home</b>\\n      </a>\\n    </p>\\n\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a [routerLink]=\\\"['/login']\\\"\\n         >\\n        <span class=\\\"glyphicon glyphicon-log-out\\\"></span>\\n      </a>\\n    </p>\\n\\n  </div>\\n</nav>\\n\\n<div class=\\\"container \\\" id=\\\"inputData\\\">\\n  <form (ngSubmit) = \\\"createEmployee()\\\" name=\\\"model.myform\\\" #f=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstName\\\">First Name</label>\\n      <input\\n        [(ngModel)] = \\\"employee.firstName\\\" type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"Alice\\\"\\n        name=\\\"firstName\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastName\\\">Last Name</label>\\n      <input [(ngModel)] = \\\"employee.lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required placeholder=\\\"Marley\\\"\\n        name=\\\"lastName\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input [(ngModel)] = \\\"employee.email\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n             placeholder=\\\"alice.marley@yahoo.com\\\"\\n        required\\n        name=\\\"email\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"baseSalary\\\">Base Salary</label>\\n      <input [(ngModel)] = \\\"employee.baseSal\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"baseSalary\\\" placeholder=\\\"4000\\\"\\n        required\\n        name=\\\"baseSal\\\"\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"medical\\\">Medical Deduction</label>\\n      <input [(ngModel)] = \\\"employee.medical\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"medical\\\" placeholder=\\\"600\\\" required\\n             name=\\\"medical\\\"\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"bonus\\\">Bonus</label>\\n      <input [(ngModel)] = \\\"employee.bonus\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"bonus\\\" placeholder=\\\"500\\\" required\\n        name=\\\"bonus\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"tax\\\">Tax Deduction</label>\\n      <input [(ngModel)] = \\\"employee.tax\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"tax\\\" placeholder=\\\"900\\\" required\\n             name=\\\"tax\\\"\\n      />\\n    </div>\\n\\n    <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">Add Employee</button>\\n  </form>\\n</div>\\n\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a [routerLink]=\\\"['/main']\\\">\\n        <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n      </a>\\n    </p>\\n\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css']\n})\nexport class EmployeeAddComponent implements OnInit {\n\n\n  employee = {};\n  constructor(private _employeeService: EmployeeService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  createEmployee() {\n    console.log('In add emp comp');\n\n    console.log();\n    this._employeeService.createEmployee(this.employee)\n      .subscribe(\n        (data : any) => {\n          this.router.navigate(['/main']);\n        },\n        (error : any) => {\n          console.log(error);\n        }\n      );\n  }\n\n}\n","module.exports = \"div#inputData {\\n  margin-top: 85px;\\n  margin-bottom: 85px;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\" [routerLink]=\\\"['/main']\\\">\\n        <b>Home</b>\\n      </a>\\n    </p>\\n\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a\\n        class=\\\"navbar-link\\\">\\n        <span class=\\\"glyphicon glyphicon-log-out\\\" [routerLink] = \\\"['/main']\\\"></span>\\n      </a>\\n    </p>\\n\\n  </div>\\n</nav>\\n<br>\\n<br>\\n<br>\\n<br>\\n<div class=\\\"container\\\" id=\\\"inputData\\\">\\n\\n  <form (ngSubmit)=\\\"updateEmployee()\\\" name=\\\"model.myform\\\" #f=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstName\\\">First Name</label>\\n      <input [(ngModel)] = \\\"employee.firstName\\\" type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"Alice\\\"\\n        name=\\\"firstName\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastName\\\">Last Name</label>\\n      <input [(ngModel)] = \\\"employee.lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required placeholder=\\\"Marley\\\"\\n        name=\\\"lastName\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input [(ngModel)] = \\\"employee.email\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"alice.marley@yahoo.com\\\"\\n        required\\n        name=\\\"email\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"baseSalary\\\">Base Salary</label>\\n      <input [(ngModel)] = \\\"employee.baseSal\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"baseSalary\\\" placeholder=\\\"4000\\\"\\n        required\\n        name=\\\"baseSal\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"medical\\\">Medical Deduction</label>\\n      <input [(ngModel)] = \\\"employee.medical\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"medical\\\" placeholder=\\\"600\\\"\\n        required\\n        name=\\\"medical\\\"\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"bonus\\\">Bonus</label>\\n      <input [(ngModel)] = \\\"employee.bonus\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"bonus\\\" placeholder=\\\"500\\\" required\\n             name=\\\"bonus\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"tax\\\">Tax Deduction</label>\\n      <input [(ngModel)] = \\\"employee.tax\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"tax\\\" placeholder=\\\"900\\\" required\\n        name=\\\"tax\\\"\\n      />\\n    </div>\\n\\n\\n    <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">Update Employee</button>\\n\\n  </form>\\n</div>\\n\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a [routerLink]=\\\"['/main']\\\">\\n        <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n<script src=\\\"http://code.jquery.com/jquery-latest.js\\\"></script>\\n<link href=\\\"//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { EmployeeService } from '../../services/employee.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-edit',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css']\n})\nexport class EmployeeEditComponent implements OnInit {\n\n  employee = {};\n  _id: String;\n\n\n  constructor(private activatedRoute: ActivatedRoute, private _employeeService: EmployeeService, private router: Router) {\n  }\n\n  ngOnInit() {\n\n    this.activatedRoute.params.subscribe(params => {\n      console.log('IN edit component');\n\n      this._id = params['employeeId'];\n      console.log(this._id);\n      console.log('Above is the id');\n      this.getEmployee();\n    });\n  }\n\n  deleteEmployee() {\n    this._employeeService.deleteEmployee(this._id)\n      .subscribe(\n        (data: any) => this.router.navigate(['/main']),\n        (error) => console.log(error)\n      );\n  }\n  updateEmployee() {\n    console.log('I am inside update employee');\n    console.log(this.employee);\n    this._employeeService.updateEmployee(this.employee)\n      .subscribe(\n        (data: any) => {\n          console.log('I am in update employee');\n          this.router.navigate(['/main'])},\n        (error) => console.log(error));\n\n  }\n  getEmployee() {\n    this._employeeService.getEmployeeById(this._id)\n      .subscribe(\n        (data: any) => {\n          this.employee = data;\n          console.log('in getEmployee');\n          console.log(JSON.stringify(data)); },\n        (error) => console.log(error)\n      );\n  }\n\n\n}\n","module.exports = \"\\ndiv.container {\\n  margin-top: 100px;\\n  margin-left : 20px;\\n  margin-right : 10px;\\n}\\n\\nbutton#add-btn {\\n  margin-bottom: 20px;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-default bg-light navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Home</b>\\n      </a>\\n    </p>\\n\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a [routerLink]=\\\"['/login']\\\">\\n        <span class=\\\"glyphicon glyphicon-log-out\\\"></span>\\n      </a>\\n    </p>\\n\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row \\\">\\n    <table class=\\\"table table-striped custab\\\">\\n      <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Net Salary</th>\\n        <th class=\\\"text-center\\\">Actions to perform</th>\\n      </tr>\\n      </thead>\\n      <tr *ngFor= \\\"let employee of employees; let i = index;\\\">\\n        <td><a [routerLink]=\\\"['/main',employee._id]\\\">{{employee.firstName}}  {{employee.lastName}}</a></td>\\n        <td>{{employee.email}}</td>\\n        <td>{{employee.finalSal}}</td>\\n        <td class=\\\"text-center\\\"><a class='btn btn-info btn-xs' [routerLink]=\\\"['/main',employee._id]\\\"><span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit</a>\\n          <a class='btn btn-danger btn-xs' (click) = \\\"deleteEmployee(employee._id,i) \\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span>Delete</a>\\n        </td>\\n      </tr>\\n    </table>\\n    <button type=\\\"button\\\"id=\\\"add-btn\\\"  class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/add']\\\"><b>+</b> Add new employee</button>\\n  </div>\\n</div>\\n\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {EmployeeService} from '../../services/employee.service';\nimport { NgForm } from '@angular/forms';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  employees: any = [];\n  constructor(private _employeeService: EmployeeService , private router: Router) { }\n\n\n  ngOnInit() {\n    this._employeeService.getAllEmployees()\n      .subscribe(\n        (data) => {\n          console.log(data);\n          this.employees = data; },\n        (error) => console.log(error)\n      );\n  }\n\n  deleteEmployee(id,i){\n    this._employeeService.deleteEmployee(id)\n      .subscribe(\n        (data) => {\n          console.log(`index to be deleted: ${i}`);\n          console.log(`Element to be deleted: ${this.employees[i]}`);\n          this.employees.splice(i,1);\n          //delete this.employees[i];\n          // for (var i = this.employees.length - 1; i >= 0; i--) {\n          //   console.log(this.employees[i]._id);\n          //   console.log(\"yes\");\n          //   console.log(id);\n          //   if (this.employees[i]._id == id) {\n          //     console.log(\"matched\");\n          //     this.employees.splice(i, 1);\n          //   }\n          // }\n        },\n        (error) => console.log(error)\n      );\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:40px\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\"><strong>Employee Payrolls Management System</strong></h3></div>\\n      <div class=\\\"panel-body\\\">\\n        <form role=\\\"form\\\" #f=\\\"ngForm\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Username</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\"  placeholder=\\\"Username\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"  placeholder=\\\"Password\\\">\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['/main']\\\">Log In</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit , ViewChild } from '@angular/core';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n","module.exports = \"\"","module.exports = \"<h1>Register</h1>\\n<label>username</label>\\n<!--<input [(ng-model)] = \\\"username\\\" placeholder = \\\"alice\\\"/>-->\\n<input placeholder = \\\"Alice\\\">\\n<br/>\\n<label>password</label>\\n<input type = \\\"password\\\" placeholder=\\\"343#$@@2\\\"/>\\n<br/>\\n<label>Validate password</label>\\n<input type = \\\"password\\\" placeholder=\\\"343#$@@2\\\"/>\\n<br/>\\n<button>login</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './Components/login/login.component';\nimport {RegisterComponent} from './Components/register/register.component';\nimport {HomeComponent} from './Components/home/home.component';\nimport {EmployeeEditComponent} from './Components/employee-edit/employee-edit.component';\nimport {EmployeeAddComponent} from './Components/employee-add/employee-add.component';\nimport {ModuleWithProviders} from '@angular/core';\n\nconst APP_ROUTES: Routes = [\n  {path: '', component : LoginComponent},\n  { path : 'login' , component: LoginComponent},\n  {path : 'register', component: RegisterComponent},\n  {path : 'main' , component : HomeComponent },\n  {\n    path: 'add', component: EmployeeAddComponent\n  },\n  {\n    path: 'main/:employeeId', component : EmployeeEditComponent\n  }\n];\n\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);\n\n","module.exports = \"h1 {\\n  color: #369;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 250%;\\n}\"","module.exports = \"<!--<a routerLink=\\\"/login\\\">Login</a>-->\\n<!--<a routerLink=\\\"/register\\\">Register </a>-->\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'My Payroll Project';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { RegisterComponent } from './Components/register/register.component';\nimport {Routing} from './app-routing.module';\nimport { HomeComponent } from './Components/home/home.component';\nimport { EmployeeAddComponent } from './Components/employee-add/employee-add.component';\nimport { EmployeeEditComponent } from './Components/employee-edit/employee-edit.component';\nimport {EmployeeService} from './services/employee.service';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    EmployeeAddComponent,\n    EmployeeEditComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, Routing , HttpClientModule\n  ],\n  providers: [EmployeeService, HttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport {HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class EmployeeService {\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n    baseUrl = environment.baseUrl;\n  deleteEmployee(employeeId) {\n    const url = this.baseUrl + '/api/main/' + employeeId;\n    return this.http.delete(url)\n      .pipe(map(\n        (res: Response) => {\n          // const data = res.json;\n          console.log(`Response for delete employee from employee service: ${JSON.stringify(res)}`);\n          return res;\n        }\n      ));\n  }\n\n    getAllEmployees() {\n      return this.http.get(this.baseUrl + '/api/main')\n        .pipe(\n          map((res) => {\n            console.log(`get all employees output in emp service: ${JSON.stringify(res)}`);\n            return res;\n          }\n        ));\n    }\n\n    getEmployeeById(employeeId: String) {\n      return this.http.get(this.baseUrl + '/api/main/' + employeeId)\n        .pipe(\n          map((res: Response) => {\n            const data = res.json;\n            console.log('get employee by id');\n            console.log(data);\n            return res;\n          }\n        ));\n    }\n\n    updateEmployee(employee: any) {\n      return this.http.put(this.baseUrl + '/api/main/' + employee._id, employee)\n        .pipe(\n        map(\n          (response) => {\n            return 'Updated';\n          }\n        ));\n    }\n  createEmployee(employee) {\n    const body = {\n      firstName : employee.firstName,\n      lastName : employee.lastName,\n      email : employee.email,\n      baseSal : employee.baseSal,\n      medical : employee.medical,\n      bonus: employee.bonus,\n      tax : employee.tax,\n      finalSal : employee.baseSal - employee.medical - employee.tax + employee.bonus\n    };\n\n    return this.http.post(this.baseUrl + '/api/add', body, httpOptions)\n      .pipe(\n        map((res: Response) => {\n            const data = res.json;\n            console.log(data);\n            return data;\n          }\n        ));\n\n  }\n  }\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl : 'https://employee-compensation.herokuapp.com'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}